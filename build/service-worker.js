const e=location.pathname.split("/").slice(0,-1).join("/"),o=[e+"/_app/immutable/entry/app.Ct3LqVhC.js",e+"/_app/immutable/nodes/0.DeRJb2j0.js",e+"/_app/immutable/assets/0.BYxtQF6H.css",e+"/_app/immutable/assets/merriweather-cyrillic-ext-300-normal.jaEQPVsq.woff2",e+"/_app/immutable/assets/merriweather-cyrillic-ext-300-normal.CMUYv2eA.woff",e+"/_app/immutable/assets/merriweather-cyrillic-300-normal.B0n2hweN.woff2",e+"/_app/immutable/assets/merriweather-cyrillic-300-normal.CEiPY806.woff",e+"/_app/immutable/assets/merriweather-vietnamese-300-normal.DJNUJcJP.woff2",e+"/_app/immutable/assets/merriweather-vietnamese-300-normal.dT9tDc-M.woff",e+"/_app/immutable/assets/merriweather-latin-ext-300-normal.BlFqywl2.woff2",e+"/_app/immutable/assets/merriweather-latin-ext-300-normal.D64NkUwl.woff",e+"/_app/immutable/assets/merriweather-latin-300-normal.C5yjfxyF.woff2",e+"/_app/immutable/assets/merriweather-latin-300-normal.TENjqH4j.woff",e+"/_app/immutable/assets/merriweather-cyrillic-ext-400-normal.D9NYhYTq.woff2",e+"/_app/immutable/assets/merriweather-cyrillic-ext-400-normal.BI4EjMhz.woff",e+"/_app/immutable/assets/merriweather-cyrillic-400-normal.AvfsDsMQ.woff2",e+"/_app/immutable/assets/merriweather-cyrillic-400-normal.DS47APPU.woff",e+"/_app/immutable/assets/merriweather-vietnamese-400-normal.hNacsVs_.woff2",e+"/_app/immutable/assets/merriweather-vietnamese-400-normal.B_i5Fvg4.woff",e+"/_app/immutable/assets/merriweather-latin-ext-400-normal.CWVzVQq3.woff2",e+"/_app/immutable/assets/merriweather-latin-ext-400-normal.Ckm7TlJj.woff",e+"/_app/immutable/assets/merriweather-latin-400-normal.G4kZaoXi.woff2",e+"/_app/immutable/assets/merriweather-latin-400-normal.DrYwLvMc.woff",e+"/_app/immutable/assets/merriweather-cyrillic-ext-700-normal.Bk1p9YoV.woff2",e+"/_app/immutable/assets/merriweather-cyrillic-ext-700-normal.BFYfSdlE.woff",e+"/_app/immutable/assets/merriweather-cyrillic-700-normal.wbY04GlL.woff2",e+"/_app/immutable/assets/merriweather-cyrillic-700-normal.DT_i5g49.woff",e+"/_app/immutable/assets/merriweather-vietnamese-700-normal.Bp6kWjW5.woff2",e+"/_app/immutable/assets/merriweather-vietnamese-700-normal.UP_UBjZ0.woff",e+"/_app/immutable/assets/merriweather-latin-ext-700-normal.jHnxg2Kc.woff2",e+"/_app/immutable/assets/merriweather-latin-ext-700-normal.BgeB7aIx.woff",e+"/_app/immutable/assets/merriweather-latin-700-normal.DoUP8Ce-.woff2",e+"/_app/immutable/assets/merriweather-latin-700-normal.m_edx7_d.woff",e+"/_app/immutable/assets/merriweather-cyrillic-ext-900-normal.CjAGNUn_.woff2",e+"/_app/immutable/assets/merriweather-cyrillic-ext-900-normal.ea0g7_TZ.woff",e+"/_app/immutable/assets/merriweather-cyrillic-900-normal.B-mPZ_zT.woff2",e+"/_app/immutable/assets/merriweather-cyrillic-900-normal.CbXqUdhT.woff",e+"/_app/immutable/assets/merriweather-vietnamese-900-normal.CeUxwsLu.woff2",e+"/_app/immutable/assets/merriweather-vietnamese-900-normal.D2hE6iCv.woff",e+"/_app/immutable/assets/merriweather-latin-ext-900-normal.D8UXbgFc.woff2",e+"/_app/immutable/assets/merriweather-latin-ext-900-normal.tAL4f06-.woff",e+"/_app/immutable/assets/merriweather-latin-900-normal.CRmIFSJV.woff2",e+"/_app/immutable/assets/merriweather-latin-900-normal.FWMTooBq.woff",e+"/_app/immutable/nodes/1.DMgI3-9U.js",e+"/_app/immutable/nodes/2.BEMujwR-.js",e+"/_app/immutable/assets/2.BOunjW6C.css",e+"/_app/immutable/assets/Toaster.DKF17Rty.css",e+"/_app/immutable/chunks/B8pF-tgs.js",e+"/_app/immutable/chunks/DDLtgsC2.js",e+"/_app/immutable/chunks/DQ6-Lk_6.js",e+"/_app/immutable/chunks/DSwRa_vl.js",e+"/_app/immutable/chunks/D_Rvj4zC.js",e+"/_app/immutable/chunks/DaN96dIN.js",e+"/_app/immutable/chunks/DlfRlD4N.js",e+"/_app/immutable/chunks/idI3UDRs.js",e+"/_app/immutable/entry/start.ShhQWbDp.js",e+"/_app/immutable/chunks/BWqiN21O.js"],c=[e+"/apple-touch-icon.png",e+"/favicon-96x96.png",e+"/favicon.ico",e+"/favicon.svg",e+"/manifest.json",e+"/web-app-manifest-192x192.png",e+"/web-app-manifest-512x512.png"],p="1755986895738",l=`cache-${p}`,i=[...o,...c];self.addEventListener("install",a=>{async function r(){await(await caches.open(l)).addAll(i)}console.log("installing service worker for version",p),console.log("caching assets",i),console.log("caching build",o),a.waitUntil(r())});self.addEventListener("activate",a=>{async function r(){for(const s of await caches.keys())s!==l&&await caches.delete(s)}a.waitUntil(r())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function r(){const s=new URL(a.request.url),m=await caches.open(l);if(i.includes(s.pathname)){const t=await m.match(s.pathname);if(t)return t}try{const t=await fetch(a.request);if(!(t instanceof Response))throw new Error("invalid response from fetch");return t.status===200&&m.put(a.request,t.clone()),t}catch(t){const n=await m.match(a.request);if(n)return console.log("Returning from Cache",a.request.url),n;throw t}}a.respondWith(r())});
